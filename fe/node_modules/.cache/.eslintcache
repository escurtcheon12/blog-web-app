[{"D:\\ReactJs\\blog\\fe\\src\\index.js":"1","D:\\ReactJs\\blog\\fe\\src\\reportWebVitals.js":"2","D:\\ReactJs\\blog\\fe\\src\\components\\App.js":"3","D:\\ReactJs\\blog\\fe\\src\\config\\Routers\\Routers.js":"4","D:\\ReactJs\\blog\\fe\\src\\config\\index.js":"5","D:\\ReactJs\\blog\\fe\\src\\components\\index.js":"6","D:\\ReactJs\\blog\\fe\\src\\components\\Contact\\Contact.js":"7","D:\\ReactJs\\blog\\fe\\src\\components\\Login\\Login.js":"8","D:\\ReactJs\\blog\\fe\\src\\components\\Blog\\Blog.js":"9","D:\\ReactJs\\blog\\fe\\src\\components\\Home\\Home.js":"10","D:\\ReactJs\\blog\\fe\\src\\components\\About\\About.js":"11","D:\\ReactJs\\blog\\fe\\src\\components\\Navbar\\Navbar.js":"12","D:\\ReactJs\\blog\\fe\\src\\components\\Footer\\Footer.js":"13","D:\\ReactJs\\blog\\fe\\src\\components\\PreviewBlog\\PreviewBlog.js":"14"},{"size":511,"mtime":1645000055110,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1644983781401,"results":"17","hashOfConfig":"16"},{"size":139,"mtime":1656663298931,"results":"18","hashOfConfig":"16"},{"size":1443,"mtime":1658118724357,"results":"19","hashOfConfig":"16"},{"size":65,"mtime":1645499141396,"results":"20","hashOfConfig":"16"},{"size":392,"mtime":1658117853297,"results":"21","hashOfConfig":"16"},{"size":3157,"mtime":1658118492960,"results":"22","hashOfConfig":"16"},{"size":937,"mtime":1645546602171,"results":"23","hashOfConfig":"16"},{"size":11918,"mtime":1658118615102,"results":"24","hashOfConfig":"16"},{"size":13157,"mtime":1658117983820,"results":"25","hashOfConfig":"16"},{"size":896,"mtime":1658118400275,"results":"26","hashOfConfig":"16"},{"size":2228,"mtime":1656235906584,"results":"27","hashOfConfig":"16"},{"size":2480,"mtime":1656232511702,"results":"28","hashOfConfig":"16"},{"size":8033,"mtime":1658118717833,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"clmzq",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"D:\\ReactJs\\blog\\fe\\src\\index.js",[],[],["76","77"],"D:\\ReactJs\\blog\\fe\\src\\reportWebVitals.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\components\\App.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\config\\Routers\\Routers.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\config\\index.js",[],[],["78","79"],"D:\\ReactJs\\blog\\fe\\src\\components\\index.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\components\\Contact\\Contact.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\components\\Login\\Login.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\components\\Blog\\Blog.js",["80","81","82","83","84","85","86","87","88","89","90","91","92"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/blog.css\";\r\nimport \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport image from \"../../assets/images/category.jpg\";\r\nimport axios from \"axios\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Blog = ({Navbar, Footer}) => {\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState(6);\r\n\r\n  const [selectCategory, setSelectCategory] = useState(0);\r\n  const [dataCategories, setDataCategories] = useState([]);\r\n  const [dataBlog, setDataBlog] = useState([]);\r\n  let indexFirstBlog = [];\r\n  let date = new Date();\r\n\r\n  useEffect(async () => {\r\n    localStorage.removeItem(\"dataBlog\");\r\n    localStorage.clear();\r\n\r\n    await axios\r\n      .get(\"http://localhost:3006/categories\")\r\n      .then((res) => {\r\n        setDataCategories(res.data.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    if (selectCategory) {\r\n      await axios\r\n        .get(\"http://localhost:3006/blogs/categories/\" + selectCategory)\r\n        .then((res) => {\r\n          setDataBlog(res.data.data);\r\n\r\n          let data = res.data.data;\r\n\r\n          const endOffset = itemOffset + itemsPerPage;\r\n          setCurrentItems(data.slice(itemOffset, endOffset));\r\n          setPageCount(Math.ceil(data.length / itemsPerPage));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      await axios\r\n        .get(\"http://localhost:3006/blogs\")\r\n        .then((res) => {\r\n          setDataBlog(res.data.data);\r\n\r\n          let data = res.data.data;\r\n\r\n          const endOffset = itemOffset + itemsPerPage;\r\n          setCurrentItems(data.slice(itemOffset, endOffset));\r\n          setPageCount(Math.ceil(data.length / itemsPerPage));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [itemsPerPage, itemOffset, selectCategory]);\r\n\r\n  const handlePageClick = (e) => {\r\n    const newOffset = (e.selected * itemsPerPage) % dataBlog.length;\r\n    console.log(\r\n      `User requested page number ${e.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  const showingDate = (itemDate) => {\r\n    let date = new Date(itemDate);\r\n    let getDate = date.getDate();\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let getYear = date.getFullYear();\r\n\r\n    return getDate + \" \" + monthNames[date.getMonth()] + \" \" + getYear;\r\n  };\r\n\r\n  const convertTimeToJs = (date) => {\r\n    let a = date + \"\";\r\n    let b = a.slice(0, 10).replace(\"T\", \" \");\r\n    return b;\r\n  };\r\n\r\n  const getFullDate = (fullDate) => {\r\n    let getMonth = fullDate.getMonth() + 1;\r\n    if (getMonth < 10) {\r\n      getMonth = \"0\" + getMonth;\r\n    }\r\n\r\n    return fullDate.getFullYear() + \"-\" + getMonth + \"-\" + fullDate.getDate();\r\n  };\r\n\r\n  const navigationPreview = (item) => {\r\n    localStorage.setItem(\"dataBlog\", JSON.stringify(item));\r\n    window.location = \"/previewBlog\";\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {Navbar}\r\n\r\n      <div className=\"container_blog\">\r\n        <h1 className=\"header_blog fw-bold text-center\">Blog</h1>\r\n        <div className=\"line_br mt-3 mb-4\"></div>\r\n      </div>\r\n\r\n      {dataCategories.length && (\r\n        <div className=\"mt-5\">\r\n          <Carousel\r\n            additionalTransfrom={0}\r\n            arrows\r\n            centerMode={false}\r\n            className=\"\"\r\n            containerClass=\"container\"\r\n            dotListClass=\"\"\r\n            draggable\r\n            focusOnSelect={false}\r\n            infinite={false}\r\n            itemClass=\"\"\r\n            keyBoardControl\r\n            minimumTouchDrag={80}\r\n            renderButtonGroupOutside={false}\r\n            renderDotsOutside={false}\r\n            responsive={{\r\n              desktop: {\r\n                breakpoint: {\r\n                  max: 3000,\r\n                  min: 1024,\r\n                },\r\n                items: 3,\r\n                partialVisibilityGutter: 40,\r\n              },\r\n              mobile: {\r\n                breakpoint: {\r\n                  max: 464,\r\n                  min: 0,\r\n                },\r\n                items: 1,\r\n                partialVisibilityGutter: 30,\r\n              },\r\n              tablet: {\r\n                breakpoint: {\r\n                  max: 1024,\r\n                  min: 464,\r\n                },\r\n                items: 2,\r\n                partialVisibilityGutter: 30,\r\n              },\r\n            }}\r\n            showDots={false}\r\n            sliderClass=\"\"\r\n            slidesToSlide={1}\r\n            swipeable\r\n          >\r\n            {(dataCategories || []).map((item, index) => {\r\n              if (item.category_id === selectCategory) {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"single-box-blog card_latest_blog color-category\"\r\n                  >\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"link-category\"\r\n                      onClick={() => setSelectCategory(item.category_id)}\r\n                    >\r\n                      <img className=\"image-blog-category\" src={image} />\r\n                    </a>\r\n                    <h1 className=\"text-image-blog-category text-white\">\r\n                      {item.category_name}\r\n                    </h1>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"single-box-blog card_latest_blog\">\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"link-category\"\r\n                      onClick={() => setSelectCategory(item.category_id)}\r\n                    >\r\n                      <img className=\"image-blog-category \" src={image} />\r\n                    </a>\r\n                    <h1 className=\"text-image-blog-category text-white\">\r\n                      {item.category_name}\r\n                    </h1>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </Carousel>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"container-body mt-4\">\r\n        {dataBlog.length && <p className=\"text-center fw-bold\">List All</p>}\r\n\r\n        {(dataBlog || []).map((item, index) => {\r\n          let mappingDate = new Date(item.blog_date);\r\n\r\n          if (\r\n            getFullDate(mappingDate) === getFullDate(date) &&\r\n            item.blog_status == \"Publish\"\r\n          ) {\r\n            let image = `http://localhost:3006/public/uploads/blogs/${item.blog_image}`;\r\n            indexFirstBlog.push(index);\r\n\r\n            if (indexFirstBlog[0] === index)\r\n              return (\r\n                <div key={index} className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div\r\n                      className=\"img-header-body\"\r\n                      onClick={() => navigationPreview(item)}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          width: \"90%\",\r\n                          height: \"20rem\",\r\n                          backgroundImage: `url(${image})`,\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundSize: \"cover\",\r\n                          borderRadius: \"10px\",\r\n                          backgroundPosition: \"center\",\r\n                        }}\r\n                        className=\"img-headline-body\"\r\n                      >\r\n                        <div className=\"text-body-headline\">\r\n                          <h1>{item.blog_title}</h1>\r\n                          <p className=\"text-most_popular\">\r\n                            {JSON.parse(item.blog_content).blocks[0].text}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n          } else if (\r\n            dataBlog.length - 1 === index &&\r\n            item.blog_status == \"Publish\"\r\n          ) {\r\n            let image = `http://localhost:3006/public/uploads/blogs/${item.blog_image}`;\r\n\r\n            indexFirstBlog.push(index);\r\n\r\n            return (\r\n              <div key={index} className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div\r\n                    className=\"img-header-body\"\r\n                    onClick={() => navigationPreview(item)}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        width: \"90%\",\r\n                        height: \"20rem\",\r\n                        backgroundImage: `url(${image})`,\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundSize: \"cover\",\r\n                        borderRadius: \"10px\",\r\n                        backgroundPosition: \"center\",\r\n                      }}\r\n                    >\r\n                      <div className=\"text-body-headline\">\r\n                        <h1>{item.blog_title}</h1>\r\n                        <p className=\"text-most_popular\">\r\n                          {JSON.parse(item.blog_content).blocks[0].text}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <div className=\"parents_cards_blog mt-5\">\r\n          {(currentItems || []).map((item, index) => {\r\n            if (index !== indexFirstBlog[0] && item.blog_status == \"Publish\") {\r\n              return (\r\n                <div key={index} className=\"single-box-blog-list \">\r\n                  <div className=\"card_latest\">\r\n                    <div>\r\n                      <img\r\n                        className=\"image-small-card\"\r\n                        src={`http://localhost:3006/public/uploads/blogs/${item.blog_image}`}\r\n                      />\r\n                      <h3 className=\"small-card-headline\">{item.blog_title}</h3>\r\n                      <div className=\"parents-text\">\r\n                        <p className=\"small-card-auth\">{item.blog_author}</p>\r\n\r\n                        <p className=\"small-card-date\">\r\n                          {showingDate(convertTimeToJs(item.blog_date))}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <p className=\"small-card-desc\">\r\n                        {JSON.parse(item.blog_content).blocks[0].text}\r\n                      </p>\r\n\r\n                      <div className=\"parent-card-link\">\r\n                        <a\r\n                          onClick={() => navigationPreview(item)}\r\n                          className=\"btn btn-outline-dark small-card-link\"\r\n                        >\r\n                          Read Details\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"paginate-blog pt-2\">\r\n          <ReactPaginate\r\n            breakLabel=\"...\"\r\n            nextLabel=\"Next\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={6}\r\n            pageCount={pageCount}\r\n            previousLabel=\"Previous\"\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n            renderOnZeroPageCount={null}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {Footer}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","D:\\ReactJs\\blog\\fe\\src\\components\\Home\\Home.js",["93","94","95","96","97","98","99","100","101","102"],[],"D:\\ReactJs\\blog\\fe\\src\\components\\About\\About.js",[],[],"D:\\ReactJs\\blog\\fe\\src\\components\\Navbar\\Navbar.js",["103","104","105"],[],"D:\\ReactJs\\blog\\fe\\src\\components\\Footer\\Footer.js",["106","107","108","109","110","111","112","113"],[],"D:\\ReactJs\\blog\\fe\\src\\components\\PreviewBlog\\PreviewBlog.js",["114","115","116","117","118","119","120","121","122"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\";\r\nimport \"../../assets/css/previewBlog.css\";\r\nimport axios from \"axios\";\r\n\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nconst PreviewBlog = ({Navbar, Footer}) => {\r\n  const [getBlogData, setGetBlogData] = useState(\r\n    JSON.parse(localStorage.getItem(\"dataBlog\"))\r\n  );\r\n  const [dataBlog, setDataBlog] = useState([]);\r\n  const [dataComment, setDataComment] = useState([]);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  let countDataBlog = 0;\r\n  let addView = getBlogData.viewer_id;\r\n\r\n\r\n  let date = new Date();\r\n\r\n  useEffect(async () => {\r\n    await axios\r\n      .get(\"http://localhost:3006/blogs\")\r\n      .then((res) => {\r\n        setDataBlog(res.data.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    await axios\r\n      .get(\"http://localhost:3006/comments\")\r\n      .then((res) => {\r\n        setDataComment(res.data.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .post(\"http://localhost:3006/blogs/addView\", {\r\n        viewer_id: addView + 1,\r\n        blog_id: getBlogData.blog_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const showingDate = (itemDate) => {\r\n    let date = new Date(itemDate);\r\n    let getDate = date.getDate();\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let getYear = date.getFullYear();\r\n\r\n    return getDate + \" \" + monthNames[date.getMonth()] + \" \" + getYear;\r\n  };\r\n\r\n  let convertTimeToJs = (date) => {\r\n    let a = date + \"\";\r\n    let b = a.slice(0, 10).replace(\"T\", \" \");\r\n    return b;\r\n  };\r\n\r\n  const handleSendComment = () => {\r\n    axios\r\n      .post(\"http://localhost:3006/comments\", {\r\n        comment_name: \"Unknown\",\r\n        comment_text: commentText,\r\n        comment_date: date,\r\n        blog_id: getBlogData.blog_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setDataComment([...dataComment, res.data.body]);\r\n        setCommentText(\"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const navigationPreview = (item) => {\r\n    localStorage.setItem(\"dataBlog\", JSON.stringify(item));\r\n    window.location = \"/previewBlog\";\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {Navbar}\r\n\r\n      <div>\r\n        <img\r\n          className=\"img-preview\"\r\n          src={`http://localhost:3006/public/uploads/blogs/${getBlogData.blog_image}`}\r\n        />\r\n        <hr />\r\n        <div className=\"text-small-preview\">\r\n          <small className=\"fw-bold\">{getBlogData.blog_author}</small>\r\n          <small className=\"fw-bold\">\r\n            {showingDate(convertTimeToJs(getBlogData.blog_date))}\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"container-text-preview\">\r\n          <h1 className=\"fw-bold\">{getBlogData.blog_title}</h1>\r\n          <p className=\"mt-5\">\r\n            <Editor\r\n              editorState={EditorState.createWithContent(\r\n                convertFromRaw(JSON.parse(getBlogData.blog_content))\r\n              )}\r\n              spellCheck={true}\r\n              readOnly\r\n            />\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"comment-preview mt-5\">\r\n          <hr />\r\n\r\n          {(dataComment || []).map((item, index) => {\r\n            if (item.blog_id === getBlogData.blog_id)\r\n              return (\r\n                <>\r\n                  <div className=\"comment-parents-preview\">\r\n                    <FontAwesomeIcon\r\n                      className=\"icon-comment-preview fa-4x mt-3\"\r\n                      icon={faUserCircle}\r\n                    />\r\n                    <div className=\"mt-3\">\r\n                      <p className=\"comment-name-preview fw-bold\">\r\n                        {item.comment_name}\r\n                      </p>\r\n                      <p className=\"comment-text-preview\">\r\n                        {item.comment_text}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </>\r\n              );\r\n          })}\r\n\r\n          <div>\r\n            <div className=\"parents-comment-send\">\r\n              <FontAwesomeIcon\r\n                className=\"icon-comment-preview fa-4x\"\r\n                icon={faUserCircle}\r\n              />\r\n              <div className=\"input-group input-comment-preview\">\r\n                <input\r\n                  className=\" form-control\"\r\n                  value={commentText}\r\n                  onChange={(e) => setCommentText(e.target.value)}\r\n                />\r\n                <button\r\n                  class=\"btn btn-dark button-comment-preview\"\r\n                  type=\"button\"\r\n                  id=\"button-addon2\"\r\n                  onClick={() => handleSendComment()}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    className=\"icon-comment-preview fa-1x\"\r\n                    icon={faPaperPlane}\r\n                  />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"mt-5\" />\r\n        </div>\r\n\r\n        <div className=\"mt-5 bottom-readMore\">\r\n          <h3 className=\"fw-bold text-center\">Read More</h3>\r\n\r\n          <div className=\"mt-5 card_blog\">\r\n            {(dataBlog || []).map((item, index) => {\r\n              countDataBlog += 1;\r\n\r\n              if (\r\n                countDataBlog <= 3 &&\r\n                getBlogData.blog_id !== item.blog_id &&\r\n                item.blog_status == \"Publish\"\r\n              ) {\r\n                return (\r\n                  <div className=\"list_card\">\r\n                    <div className=\"single-box\">\r\n                      <div className=\"card_latest\">\r\n                        <div>\r\n                          <img\r\n                            className=\"image-small-card\"\r\n                            src={`http://localhost:3006/public/uploads/blogs/${item.blog_image}`}\r\n                          />\r\n                          <h3 className=\"small-card-headline\">\r\n                            {item.blog_title}\r\n                          </h3>\r\n                          <div className=\"parents-text\">\r\n                            <p className=\"small-card-auth\">\r\n                              {item.blog_author}\r\n                            </p>\r\n                            <p className=\"small-card-date\">\r\n                              {showingDate(convertTimeToJs(item.blog_date))}\r\n                            </p>\r\n                          </div>\r\n                          <p className=\"small-card-desc\">\r\n                            {JSON.parse(item.blog_content).blocks[0].text}\r\n                          </p>\r\n\r\n                          <div className=\"parent-card-link\">\r\n                            <a\r\n                              onClick={() => navigationPreview(item)}\r\n                              className=\"btn btn-outline-dark small-card-link\"\r\n                            >\r\n                              Read Details\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n\r\n          <a\r\n            href=\"/Blog\"\r\n            className=\"btn btn-outline-dark btn-more-preview mt-4\"\r\n          >\r\n            More Details\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      {Footer}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PreviewBlog;\r\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":14,"column":24,"nodeType":"131","messageId":"132","endLine":14,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":22,"column":13,"nodeType":"135","endLine":60,"endColumn":4},{"ruleId":"136","severity":1,"message":"137","line":176,"column":21,"nodeType":"138","endLine":180,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":181,"column":23,"nodeType":"138","endLine":181,"endColumn":74},{"ruleId":"136","severity":1,"message":"137","line":191,"column":21,"nodeType":"138","endLine":195,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":196,"column":23,"nodeType":"138","endLine":196,"endColumn":75},{"ruleId":"141","severity":1,"message":"142","line":212,"column":45,"nodeType":"135","messageId":"143","endLine":212,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":217,"column":30,"nodeType":"146","messageId":"147","endLine":217,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":255,"column":30,"nodeType":"146","messageId":"147","endLine":255,"endColumn":32},{"ruleId":"141","severity":1,"message":"142","line":294,"column":51,"nodeType":"135","messageId":"143","endLine":294,"endColumn":53},{"ruleId":"144","severity":1,"message":"145","line":295,"column":65,"nodeType":"146","messageId":"147","endLine":295,"endColumn":67},{"ruleId":"139","severity":1,"message":"140","line":300,"column":23,"nodeType":"138","endLine":303,"endColumn":25},{"ruleId":"136","severity":1,"message":"148","line":318,"column":25,"nodeType":"138","endLine":321,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":22,"column":13,"nodeType":"135","endLine":46,"endColumn":4},{"ruleId":"141","severity":1,"message":"149","line":73,"column":43,"nodeType":"135","messageId":"150","endLine":73,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":125,"column":51,"nodeType":"135","messageId":"143","endLine":125,"endColumn":53},{"ruleId":"129","severity":1,"message":"151","line":165,"column":23,"nodeType":"131","messageId":"132","endLine":165,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":207,"column":61,"nodeType":"135","messageId":"143","endLine":207,"endColumn":63},{"ruleId":"139","severity":1,"message":"140","line":214,"column":29,"nodeType":"138","endLine":217,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":240,"column":55,"nodeType":"135","messageId":"143","endLine":240,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":248,"column":33,"nodeType":"138","endLine":251,"endColumn":35},{"ruleId":"136","severity":1,"message":"148","line":270,"column":35,"nodeType":"138","endLine":273,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":292,"column":55,"nodeType":"135","messageId":"143","endLine":292,"endColumn":57},{"ruleId":"129","severity":1,"message":"152","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":25},{"ruleId":"129","severity":1,"message":"153","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"154","line":4,"column":20,"nodeType":"131","messageId":"132","endLine":4,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":28,"column":17,"nodeType":"138","endLine":28,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":29,"column":19,"nodeType":"138","endLine":29,"endColumn":46},{"ruleId":"136","severity":1,"message":"137","line":32,"column":17,"nodeType":"138","endLine":32,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":33,"column":19,"nodeType":"138","endLine":33,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":36,"column":17,"nodeType":"138","endLine":36,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":37,"column":19,"nodeType":"138","endLine":37,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":49,"column":25,"nodeType":"138","endLine":49,"endColumn":70},{"ruleId":"136","severity":1,"message":"137","line":57,"column":17,"nodeType":"138","endLine":57,"endColumn":62},{"ruleId":"129","severity":1,"message":"155","line":13,"column":23,"nodeType":"131","messageId":"132","endLine":13,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":26,"column":13,"nodeType":"135","endLine":50,"endColumn":4},{"ruleId":"133","severity":1,"message":"156","line":50,"column":6,"nodeType":"157","endLine":50,"endColumn":8,"suggestions":"158"},{"ruleId":"139","severity":1,"message":"140","line":108,"column":9,"nodeType":"138","endLine":111,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":136,"column":50,"nodeType":"135","messageId":"143","endLine":136,"endColumn":52},{"ruleId":"141","severity":1,"message":"142","line":193,"column":49,"nodeType":"135","messageId":"143","endLine":193,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":199,"column":34,"nodeType":"146","messageId":"147","endLine":199,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":206,"column":27,"nodeType":"138","endLine":209,"endColumn":29},{"ruleId":"136","severity":1,"message":"148","line":226,"column":29,"nodeType":"138","endLine":229,"endColumn":30},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'setItemsPerPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","Array.prototype.map() expects a return value from arrow function.","expectedInside","'total' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faSearch' is defined but never used.","'faUserCircle' is defined but never used.","'setGetBlogData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addView' and 'getBlogData.blog_id'. Either include them or remove the dependency array.","ArrayExpression",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [addView, getBlogData.blog_id]",{"range":"164","text":"165"},[1562,1564],"[addView, getBlogData.blog_id]"]